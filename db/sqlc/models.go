// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
	"github.com/tabbed/pqtype"
)

type Account struct {
	ClientID                    uuid.UUID      `json:"client_id"`
	ApiToken                    string         `json:"api_token"`
	ServiceAccount              string         `json:"service_account"`
	Environment                 string         `json:"environment"`
	Team                        string         `json:"team"`
	Email                       string         `json:"email"`
	RegularExpression           sql.NullString `json:"regular_expression"`
	ValidSubjectAlternateName   []string       `json:"valid_subject_alternate_name"`
	ValidCertificateAuthorities []string       `json:"valid_certificate_authorities"`
	ExtendedKey                 string         `json:"extended_key"`
	CertificateValidity         int16          `json:"certificate_validity"`
	SubordinateCa               string         `json:"subordinate_ca"`
	Provisioned                 bool           `json:"provisioned"`
	NodeAttestation             []string       `json:"node_attestation"`
	CreatedAt                   time.Time      `json:"created_at"`
	CreatedBy                   uuid.UUID      `json:"created_by"`
}

type AwsAttestation struct {
	ClientID        uuid.UUID             `json:"client_id"`
	RoleArn         sql.NullString        `json:"role_arn"`
	AssumeRole      sql.NullString        `json:"assume_role"`
	SecurityGroupID []string              `json:"security_group_id"`
	Region          sql.NullString        `json:"region"`
	InstanceID      sql.NullString        `json:"instance_id"`
	ImageID         sql.NullString        `json:"image_id"`
	InstanceTags    pqtype.NullRawMessage `json:"instance_tags"`
}

type Certificate struct {
	SerialNumber            string         `json:"serial_number"`
	Account                 string         `json:"account"`
	Environment             string         `json:"environment"`
	ExtendedKey             string         `json:"extended_key"`
	CommonName              string         `json:"common_name"`
	SubjectAlternativeName  []string       `json:"subject_alternative_name"`
	ExpirationDate          time.Time      `json:"expiration_date"`
	IssuedDate              time.Time      `json:"issued_date"`
	Revoked                 bool           `json:"revoked"`
	RevokedBy               sql.NullString `json:"revoked_by"`
	RevokeDate              sql.NullTime   `json:"revoke_date"`
	CertificateAuthorityArn sql.NullString `json:"certificate_authority_arn"`
}

type Provisioner struct {
	ClientID                   uuid.UUID      `json:"client_id"`
	ApiToken                   string         `json:"api_token"`
	ProvisionerAccount         string         `json:"provisioner_account"`
	Environments               []string       `json:"environments"`
	Team                       string         `json:"team"`
	Email                      string         `json:"email"`
	RegularExpression          sql.NullString `json:"regular_expression"`
	ValidSubjectAlternateNames []string       `json:"valid_subject_alternate_names"`
	ExtendedKeys               []string       `json:"extended_keys"`
	MaxCertificateValidity     int16          `json:"max_certificate_validity"`
	NodeAttestation            []string       `json:"node_attestation"`
	CreatedAt                  time.Time      `json:"created_at"`
	CreatedBy                  uuid.UUID      `json:"created_by"`
}

type User struct {
	Uuid                uuid.UUID `json:"uuid"`
	Username            string    `json:"username"`
	HashedCredential    string    `json:"hashed_credential"`
	FullName            string    `json:"full_name"`
	Email               string    `json:"email"`
	Permissions         string    `json:"permissions"`
	CredentialChangedAt time.Time `json:"credential_changed_at"`
	CreatedAt           time.Time `json:"created_at"`
}
